print ("hello world")       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customer_id</th>\n",
       "      <th>credit_score</th>\n",
       "      <th>age</th>\n",
       "      <th>tenure</th>\n",
       "      <th>balance</th>\n",
       "      <th>products_number</th>\n",
       "      <th>credit_card</th>\n",
       "      <th>active_member</th>\n",
       "      <th>estimated_salary</th>\n",
       "      <th>churn</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>customer_id</th>\n",
       "      <td>1.000</td>\n",
       "      <td>0.005</td>\n",
       "      <td>0.009</td>\n",
       "      <td>-0.015</td>\n",
       "      <td>-0.012</td>\n",
       "      <td>0.017</td>\n",
       "      <td>-0.014</td>\n",
       "      <td>0.002</td>\n",
       "      <td>0.015</td>\n",
       "      <td>-0.006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>credit_score</th>\n",
       "      <td>0.005</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.004</td>\n",
       "      <td>0.001</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.012</td>\n",
       "      <td>-0.005</td>\n",
       "      <td>0.026</td>\n",
       "      <td>-0.001</td>\n",
       "      <td>-0.027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>age</th>\n",
       "      <td>0.009</td>\n",
       "      <td>-0.004</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>0.028</td>\n",
       "      <td>-0.031</td>\n",
       "      <td>-0.012</td>\n",
       "      <td>0.085</td>\n",
       "      <td>-0.007</td>\n",
       "      <td>0.285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tenure</th>\n",
       "      <td>-0.015</td>\n",
       "      <td>0.001</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.012</td>\n",
       "      <td>0.013</td>\n",
       "      <td>0.023</td>\n",
       "      <td>-0.028</td>\n",
       "      <td>0.008</td>\n",
       "      <td>-0.014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>balance</th>\n",
       "      <td>-0.012</td>\n",
       "      <td>0.006</td>\n",
       "      <td>0.028</td>\n",
       "      <td>-0.012</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.304</td>\n",
       "      <td>-0.015</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>0.013</td>\n",
       "      <td>0.119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>products_number</th>\n",
       "      <td>0.017</td>\n",
       "      <td>0.012</td>\n",
       "      <td>-0.031</td>\n",
       "      <td>0.013</td>\n",
       "      <td>-0.304</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.003</td>\n",
       "      <td>0.010</td>\n",
       "      <td>0.014</td>\n",
       "      <td>-0.048</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>credit_card</th>\n",
       "      <td>-0.014</td>\n",
       "      <td>-0.005</td>\n",
       "      <td>-0.012</td>\n",
       "      <td>0.023</td>\n",
       "      <td>-0.015</td>\n",
       "      <td>0.003</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.012</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>-0.007</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>active_member</th>\n",
       "      <td>0.002</td>\n",
       "      <td>0.026</td>\n",
       "      <td>0.085</td>\n",
       "      <td>-0.028</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>0.010</td>\n",
       "      <td>-0.012</td>\n",
       "      <td>1.000</td>\n",
       "      <td>-0.011</td>\n",
       "      <td>-0.156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>estimated_salary</th>\n",
       "      <td>0.015</td>\n",
       "      <td>-0.001</td>\n",
       "      <td>-0.007</td>\n",
       "      <td>0.008</td>\n",
       "      <td>0.013</td>\n",
       "      <td>0.014</td>\n",
       "      <td>-0.010</td>\n",
       "      <td>-0.011</td>\n",
       "      <td>1.000</td>\n",
       "      <td>0.012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>churn</th>\n",
       "      <td>-0.006</td>\n",
       "      <td>-0.027</td>\n",
       "      <td>0.285</td>\n",
       "      <td>-0.014</td>\n",
       "      <td>0.119</td>\n",
       "      <td>-0.048</td>\n",
       "      <td>-0.007</td>\n",
       "      <td>-0.156</td>\n",
       "      <td>0.012</td>\n",
       "      <td>1.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  customer_id  credit_score    age  tenure  balance  \\\n",
       "customer_id             1.000         0.005  0.009  -0.015   -0.012   \n",
       "credit_score            0.005         1.000 -0.004   0.001    0.006   \n",
       "age                     0.009        -0.004  1.000  -0.010    0.028   \n",
       "tenure                 -0.015         0.001 -0.010   1.000   -0.012   \n",
       "balance                -0.012         0.006  0.028  -0.012    1.000   \n",
       "products_number         0.017         0.012 -0.031   0.013   -0.304   \n",
       "credit_card            -0.014        -0.005 -0.012   0.023   -0.015   \n",
       "active_member           0.002         0.026  0.085  -0.028   -0.010   \n",
       "estimated_salary        0.015        -0.001 -0.007   0.008    0.013   \n",
       "churn                  -0.006        -0.027  0.285  -0.014    0.119   \n",
       "\n",
       "                  products_number  credit_card  active_member  \\\n",
       "customer_id                 0.017       -0.014          0.002   \n",
       "credit_score                0.012       -0.005          0.026   \n",
       "age                        -0.031       -0.012          0.085   \n",
       "tenure                      0.013        0.023         -0.028   \n",
       "balance                    -0.304       -0.015         -0.010   \n",
       "products_number             1.000        0.003          0.010   \n",
       "credit_card                 0.003        1.000         -0.012   \n",
       "active_member               0.010       -0.012          1.000   \n",
       "estimated_salary            0.014       -0.010         -0.011   \n",
       "churn                      -0.048       -0.007         -0.156   \n",
       "\n",
       "                  estimated_salary  churn  \n",
       "customer_id                  0.015 -0.006  \n",
       "credit_score                -0.001 -0.027  \n",
       "age                         -0.007  0.285  \n",
       "tenure                       0.008 -0.014  \n",
       "balance                      0.013  0.119  \n",
       "products_number              0.014 -0.048  \n",
       "credit_card                 -0.010 -0.007  \n",
       "active_member               -0.011 -0.156  \n",
       "estimated_salary             1.000  0.012  \n",
       "churn                        0.012  1.000  "
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4fdd6d28-86bf-4f07-8124-59f2574be6c1",
   "metadata": {},
   "source": [
    "### Point 5\n",
    "\n",
    "Mengubah nilai int64 menjadi nilai float64\n",
    "\n",
    "### Solusi\n",
    "Menggunakan `df[\"nama kolom\"].astype(\"tipe data yang diinginkan\")` perintah ini dapat melakukan konversi tipe data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "id": "92185cd0-9e67-4939-888c-30c215a6f759",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('float64')"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"age\"] = df[\"age\"].astype(\"float64\")\n",
    "\n",
    "df[\"age\"].dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "63dcf3a7-462a-46d4-94a9-db1347f76141",
   "metadata": {},
   "source": [
    "Karena float hanya dapat menampilkan 1 angka dibelakang koma, <br>\n",
    "Maka untuk menambahkan 3 angka dibelakang koma `df[\"nama kolom\"] = df[\"nama kolom\"].map('{:.3f}'.format)` "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "id": "ceb602d5-9b89-44cd-8382-585581957e68",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"age\"] = df[\"age\"].map('{:.3f}'.format)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75dad7ab-c6a0-4222-b397-6c2e3572db03",
   "metadata": {},
   "source": [
    "### Point 6\n",
    "\n",
    "Menampilkan 10 record pertama dari attribut bertipe angka \n",
    "\n",
    "### Solusi\n",
    "\n",
    "Menggunakan `df.head()` perintah ini dapat menampilkan 10 record pertama "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "id": "42f9d191-37ae-4f07-82b2-5a0c28bd54e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>customer_id</th>\n",
       "      <th>credit_score</th>\n",
       "      <th>age</th>\n",
       "      <th>tenure</th>\n",
       "      <th>balance</th>\n",
       "      <th>products_number</th>\n",
       "      <th>credit_card</th
